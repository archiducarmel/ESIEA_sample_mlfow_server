#!/bin/bash
# setup_mlflow.sh - Installation simple MLflow avec service systemd

echo "üöÄ Installation MLflow avec service systemd"
echo "============================================"

# Variables
SERVICE_NAME="mlflow"
MLFLOW_DIR="$HOME/mlflow"
MLFLOW_USER=$(whoami)

# Installation de MLflow
echo "üì¶ Installation de MLflow..."
pip3 install --user mlflow

# Cr√©ation du dossier de travail
echo "üìÅ Cr√©ation du dossier de travail..."
mkdir -p $MLFLOW_DIR
cd $MLFLOW_DIR

# Cr√©ation du dossier pour les artefacts
mkdir -p artifacts

# Fonction pour cr√©er le service systemd
create_systemd_service() {
    echo "üîß Cr√©ation du service systemd..."
    
    # D√©tection du chemin Python
    PYTHON_PATH=$(which python3)
    MLFLOW_PATH=$(which mlflow)
    
    # Si mlflow n'est pas dans le PATH, chercher dans ~/.local/bin
    if [ -z "$MLFLOW_PATH" ]; then
        MLFLOW_PATH="$HOME/.local/bin/mlflow"
    fi
    
    # Cr√©ation du fichier service
    sudo tee /etc/systemd/system/$SERVICE_NAME.service > /dev/null << EOF
[Unit]
Description=MLflow Tracking Server
After=network.target

[Service]
Type=exec
User=$MLFLOW_USER
Group=$MLFLOW_USER
WorkingDirectory=$MLFLOW_DIR
Environment=PATH=$HOME/.local/bin:/usr/local/bin:/usr/bin:/bin
ExecStart=$MLFLOW_PATH ui --backend-store-uri sqlite:///$MLFLOW_DIR/mlflow.db --default-artifact-root $MLFLOW_DIR/artifacts --host 0.0.0.0 --port 5000
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

    echo "‚úÖ Service systemd cr√©√©"
}

# Fonction pour g√©rer le service
manage_service() {
    # V√©rifier si le service existe
    if systemctl list-unit-files | grep -q "^$SERVICE_NAME.service"; then
        echo "üîÑ Service $SERVICE_NAME existe d√©j√†, red√©marrage..."
        sudo systemctl daemon-reload
        sudo systemctl restart $SERVICE_NAME
        sudo systemctl status $SERVICE_NAME --no-pager -l
    else
        echo "üÜï Cr√©ation et activation du service $SERVICE_NAME..."
        create_systemd_service
        sudo systemctl daemon-reload
        sudo systemctl enable $SERVICE_NAME
        sudo systemctl start $SERVICE_NAME
        sudo systemctl status $SERVICE_NAME --no-pager -l
    fi
}

# Cr√©ation d'un script de gestion simplifi√©
create_management_script() {
    echo "üõ†Ô∏è Cr√©ation du script de gestion..."
    
    cat > $MLFLOW_DIR/manage.sh << 'EOF'
#!/bin/bash
# Script de gestion MLflow

SERVICE_NAME="mlflow"

case "${1:-status}" in
    start)
        echo "üöÄ D√©marrage de MLflow..."
        sudo systemctl start $SERVICE_NAME
        ;;
    stop)
        echo "üõë Arr√™t de MLflow..."
        sudo systemctl stop $SERVICE_NAME
        ;;
    restart)
        echo "üîÑ Red√©marrage de MLflow..."
        sudo systemctl restart $SERVICE_NAME
        ;;
    status)
        echo "üìä √âtat de MLflow:"
        sudo systemctl status $SERVICE_NAME --no-pager -l
        ;;
    logs)
        echo "üìù Logs de MLflow:"
        sudo journalctl -u $SERVICE_NAME -f
        ;;
    enable)
        echo "‚ö° Activation au d√©marrage..."
        sudo systemctl enable $SERVICE_NAME
        ;;
    disable)
        echo "‚ùå D√©sactivation au d√©marrage..."
        sudo systemctl disable $SERVICE_NAME
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status|logs|enable|disable}"
        echo ""
        echo "Commandes disponibles:"
        echo "  start    - D√©marrer MLflow"
        echo "  stop     - Arr√™ter MLflow"
        echo "  restart  - Red√©marrer MLflow"
        echo "  status   - Voir l'√©tat du service"
        echo "  logs     - Voir les logs en temps r√©el"
        echo "  enable   - Activer au d√©marrage"
        echo "  disable  - D√©sactiver au d√©marrage"
        ;;
esac
EOF

    chmod +x $MLFLOW_DIR/manage.sh
    echo "‚úÖ Script de gestion cr√©√© : $MLFLOW_DIR/manage.sh"
}

# V√©rification des permissions sudo
check_sudo() {
    if ! sudo -n true 2>/dev/null; then
        echo "‚ö†Ô∏è Ce script n√©cessite les permissions sudo pour g√©rer le service systemd"
        echo "Veuillez entrer votre mot de passe si demand√©..."
    fi
}

# Ex√©cution principale
main() {
    check_sudo
    manage_service
    create_management_script
    
    echo ""
    echo "‚úÖ Installation termin√©e !"
    echo "========================="
    echo ""
    echo "MLflow est maintenant disponible en tant que service systemd !"
    echo ""
    echo "Commandes utiles :"
    echo "  $MLFLOW_DIR/manage.sh status    # Voir l'√©tat"
    echo "  $MLFLOW_DIR/manage.sh logs      # Voir les logs"
    echo "  $MLFLOW_DIR/manage.sh restart   # Red√©marrer"
    echo ""
    echo "Interface web disponible sur :"
    echo "  http://localhost:5000"
    echo "  http://$(hostname -I | awk '{print $1}'):5000"
    echo ""
    
    # Affichage de l'√©tat final
    echo "üìä √âtat actuel du service :"
    sudo systemctl status $SERVICE_NAME --no-pager -l
}

main
